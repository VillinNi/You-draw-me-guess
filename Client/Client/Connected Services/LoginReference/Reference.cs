//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.LoginReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        bool Login(string id, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string id, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Registered", ReplyAction="http://tempuri.org/ILoginService/RegisteredResponse")]
        bool Registered(string id, string pw, string sn, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Registered", ReplyAction="http://tempuri.org/ILoginService/RegisteredResponse")]
        System.Threading.Tasks.Task<bool> RegisteredAsync(string id, string pw, string sn, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ForgetPassword", ReplyAction="http://tempuri.org/ILoginService/ForgetPasswordResponse")]
        bool ForgetPassword(string id, string ps);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ForgetPassword", ReplyAction="http://tempuri.org/ILoginService/ForgetPasswordResponse")]
        System.Threading.Tasks.Task<bool> ForgetPasswordAsync(string id, string ps);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : Client.LoginReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<Client.LoginReference.ILoginService>, Client.LoginReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string id, string pw) {
            return base.Channel.Login(id, pw);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string id, string pw) {
            return base.Channel.LoginAsync(id, pw);
        }
        
        public bool Registered(string id, string pw, string sn, string name) {
            return base.Channel.Registered(id, pw, sn, name);
        }
        
        public System.Threading.Tasks.Task<bool> RegisteredAsync(string id, string pw, string sn, string name) {
            return base.Channel.RegisteredAsync(id, pw, sn, name);
        }
        
        public bool ForgetPassword(string id, string ps) {
            return base.Channel.ForgetPassword(id, ps);
        }
        
        public System.Threading.Tasks.Task<bool> ForgetPasswordAsync(string id, string ps) {
            return base.Channel.ForgetPasswordAsync(id, ps);
        }
    }
}
